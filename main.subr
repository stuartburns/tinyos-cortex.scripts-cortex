#!/bin/bash
# -*- mode: shell-script; mode: flyspell-prog; -*-
#
#  Copyright (C) 2010 Tadashi G. Takaoka
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

. $(dirname ${BASH_ARGV[0]})/func.subr

fetch="-none-"
which wget >/dev/null && fetch="wget"
which curl >/dev/null && fetch="curl -O"
[[ $fetch = "-none-" ]] && die "missing wget or curl"

function fetch() {
    local url=$1
    $fetch $url \
        || die "can not fetch $url"
}

which cvs >/dev/null || die "missing cvs"
which svn >/dev/null || die "missing svn"

scriptdir=$(absolute_path $(dirname $0))
scriptname=$(basename $0 .sh)

. $scriptdir/config.subr

buildtop=$PWD
builddir=$PWD/build-$target-$scriptname

function usage {
    die "usage: $0 [--help|-h] [download|build|install|cleanup...]"
}

function main() {
    local i cmd
    local -a cmds

    for i in "$@"; do
        case $i in
            -h|--help) usage;;
            -*) die "unkown option $i, try --help";;
            *) cmds+=($i);;
        esac
    done

    PATH=$prefix/bin:$PATH
    if [[ ${#cmds[@]} -eq 0 ]]; then
        set -x; download && prepare && build; set +x
        echo "To install $scriptname under $prefix, run '$0 install'"
    else
        for cmd in "${cmds[@]}"; do
            case $cmd in
            download)
                set -x; download || die "download failed"; set +x;;
            build)
                set -x; prepare && build || die "build failed"; set +x;;
            install)
                set -x; install || die "install failed"; set +x;;
            cleanup)
                set -x; cleanup; set +x;;
            *)
                die "unknown command '$cmd'";;
            esac
        done
    fi
}

# Local Variables:
# indent-tabs-mode: nil
# End:
# vim: set et ts=4 sw=4:
