#!/bin/bash
# -*- mode: shell-script; mode: flyspell-prog; -*-
#
# Copyright (c) 2010, Tadashi G Takaoka
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# - Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# - Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in
#   the documentation and/or other materials provided with the
#   distribution.
# - Neither the name of Tadashi G. Takaoka nor the names of its
#   contributors may be used to endorse or promote products derived
#   from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGE.
#

function error() {
    echo "$@" 1>&2
}

function die() {
    error "$@"
    exit 1
}

function absolute_path() {
    local abs
    case $1 in
    .) abs=${PWD};;
    /*) abs=$1;;
    *) abs=${PWD}/$1;;
    esac
    echo $abs
}

function add_path() {
    local path=$1 p
    shift
    for p in "$@"; do
        [[ -d $p ]] || continue
        p=${p%/}
        case $path in
        $p:*) ;;
        *:$p:*) ;;
        *:$p) ;;
        *) path=$p:$path;;
        esac
    done
    echo $path
}

function is_osx() {
    [[ $(uname) = Darwin ]]
}

function is_osx_snow_leopard() {
    [[ $(is_osx) && $(hwprefs os_class) = "Snow Leopard" ]]
}

function is_linux() {
    [[ $(uname) = Linux ]]
}

function num_cpus() {
    local n
    if is_osx; then
        n=$(hwprefs cpu_count)
    elif is_linux; then
        n=$(grep ^processor /proc/cpuinfo | wc -l)
    else
        n=1
    fi
    echo $((n * 2))
}

function fetch() {
    [[ $# -eq 2 ]] || die "usage: fetch url out_file"
    local url=$1 out=$2
    [[ -f $out ]] \
        && return
    if is_lunux; then
        wget -O $out $url \
            || die "can not fetch $out from $url"
    elif is_osx; then
        curl -o $out -L $url \
            || die "can not fetch $out from $url"
    else
        die "unknown host architecture"
    fi
}

# Local Variables:
# indent-tabs-mode: nil
# End:
# vim: set et ts=4 sw=4:
